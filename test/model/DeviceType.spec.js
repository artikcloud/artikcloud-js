/**
 * ARTIK Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ArtikCloud);
  }
}(this, function(expect, ArtikCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ArtikCloud.DeviceType();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeviceType', function() {
    it('should create an instance of DeviceType', function() {
      // uncomment below and update the code to test DeviceType
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be.a(ArtikCloud.DeviceType);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property uniqueName (base name: "uniqueName")', function() {
      // uncomment below and update the code to test the property uniqueName
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property latestVersion (base name: "latestVersion")', function() {
      // uncomment below and update the code to test the property latestVersion
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "lastUpdated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property uid (base name: "uid")', function() {
      // uncomment below and update the code to test the property uid
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property oid (base name: "oid")', function() {
      // uncomment below and update the code to test the property oid
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property hasCloudConnector (base name: "hasCloudConnector")', function() {
      // uncomment below and update the code to test the property hasCloudConnector
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property approved (base name: "approved")', function() {
      // uncomment below and update the code to test the property approved
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property published (base name: "published")', function() {
      // uncomment below and update the code to test the property published
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property _protected (base name: "protected")', function() {
      // uncomment below and update the code to test the property _protected
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property inStore (base name: "inStore")', function() {
      // uncomment below and update the code to test the property inStore
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property ownedByCurrentUser (base name: "ownedByCurrentUser")', function() {
      // uncomment below and update the code to test the property ownedByCurrentUser
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property rsp (base name: "rsp")', function() {
      // uncomment below and update the code to test the property rsp
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property issuerDn (base name: "issuerDn")', function() {
      // uncomment below and update the code to test the property issuerDn
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

    it('should have the property vid (base name: "vid")', function() {
      // uncomment below and update the code to test the property vid
      //var instane = new ArtikCloud.DeviceType();
      //expect(instance).to.be();
    });

  });

}));
